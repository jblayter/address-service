{
	"info": {
		"_postman_id": "df6ac0ad-635f-4d40-8080-452cfb74eefd",
		"name": "Address Service API",
		"description": "Collection for testing the Address Service API with Smarty US Street Address validation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35166119"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "GET Health Check",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-correlation-id",
								"value": "{{correlationId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Health check endpoint to verify the service is running"
					},
					"response": []
				}
			],
			"description": "Health check endpoints"
		},
		{
			"name": "Address Validation",
			"item": [
				{
					"name": "POST Validate Address - Complete",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-correlation-id",
								"value": "{{correlationId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"correlationId\": \"{{correlationId}}\",\n  \"street\": \"6902 Silver Springs Dr NW\",\n  \"city\": \"Gig Harbor\",\n  \"state\": \"WA\",\n  \"zipcode\": \"98335\",\n  \"addressee\": \"John Blayter\",\n  \"candidates\": 3,\n  \"match\": \"range\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/addresses/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"validate"
							]
						},
						"description": "Validate a complete address with all fields including correlationId"
					},
					"response": []
				},
				{
					"name": "POST Validate Address - Minimal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-correlation-id",
								"value": "{{correlationId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"correlationId\": \"{{correlationId}}\",\n  \"street\": \"6902 Silver Springs\",\n  \"city\": \"Gig Harbor\",\n  \"state\": \"WA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/addresses/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"validate"
							]
						},
						"description": "Validate an address with minimal required fields"
					},
					"response": []
				}
			],
			"description": "Address validation endpoints using Smarty US Street Address API"
		},
		{
			"name": "Error Scenarios",
			"item": [
				{
					"name": "POST Malformed JSON",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-correlation-id",
								"value": "{{correlationId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"correlationId\": \"{{correlationId}}\",\n  \"street\": \"1600 Amphitheatre Parkway\",\n  \"city\": \"Mountain View\",\n  \"state\": \"CA\",\n  \"zipcode\": \"94043\",\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/addresses/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"validate"
							]
						},
						"description": "Test error handling for malformed JSON (trailing comma)"
					},
					"response": []
				},
				{
					"name": "POST Invalid Content-Type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							},
							{
								"key": "x-correlation-id",
								"value": "{{correlationId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "correlationId={{correlationId}}&street=1600 Amphitheatre Parkway&city=Mountain View&state=CA",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/addresses/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"validate"
							]
						},
						"description": "Test error handling for invalid Content-Type"
					},
					"response": []
				},
				{
					"name": "POST Empty Body",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-correlation-id",
								"value": "{{correlationId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/addresses/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"validate"
							]
						},
						"description": "Test error handling for empty request body"
					},
					"response": []
				}
			],
			"description": "Error handling and edge case scenarios"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Generate a unique correlation ID for each request if not already set",
					"if (!pm.collectionVariables.get('correlationId')) {",
					"    pm.collectionVariables.set('correlationId', pm.variables.replaceIn('{{$guid}}'));",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "correlationId",
			"value": "",
			"type": "string"
		}
	]
}